{
  "name": "api-backend",
  "version": "1.0.0",
  "description": "Backend API",
  "main": "dist/index.js",
  "scripts": {
    "setup": "chmod +x scripts/setup-env.sh && ./scripts/setup-env.sh",
    "dev": "nodemon -r tsconfig-paths/register src/index.ts",
    "build": "tsc",
    "start": "node dist/index.js",
    "start:prod": "NODE_ENV=production node -r tsconfig-paths/register dist/index.js",
    "prestart": "npm run build",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "lint": "eslint src/**/*.ts",
    "lint:fix": "eslint src/**/*.ts --fix",
    "format": "prettier --write \"src/**/*.{ts,js,json}\"",
    "format:check": "prettier --check \"src/**/*.{ts,js,json}\"",
    "format:staged": "prettier --write",
    "migrate": "ts-node -r tsconfig-paths/register src/infrastructure/database/migration-runner.ts",
    "migrate:prod": "NODE_ENV=production node -r tsconfig-paths/register dist/infrastructure/database/migration-runner.js",
    "migrate:status": "ts-node -r tsconfig-paths/register -e \"import { TypeORMMigrationRunner } from './src/infrastructure/database/migration-runner'; const runner = new TypeORMMigrationRunner(); runner.showMigrationStatus().then(() => runner.close());\"",
    "migrate:revert": "ts-node -r tsconfig-paths/register -e \"import { TypeORMMigrationRunner } from './src/infrastructure/database/migration-runner'; const runner = new TypeORMMigrationRunner(); runner.revertLastMigration().then(() => runner.close());\"",
    "typeorm": "typeorm-ts-node-commonjs",
    "typeorm:generate": "typeorm-ts-node-commonjs migration:generate",
    "typeorm:create": "typeorm-ts-node-commonjs migration:create",
    "docker:build": "docker build -t aura-backend .",
    "docker:run": "docker run -p 3000:3000 aura-backend",
    "docker:prod": "docker-compose -f docker-compose.prod.yml up -d",
    "deploy": "./scripts/deploy.sh",
    "health": "curl -f http://localhost:3000/health || exit 1"
  },
  "keywords": [
    "nodejs",
    "express",
    "typescript",
    "hexagonal",
    "architecture"
  ],
  "author": "",
  "license": "MIT",
  "dependencies": {
    "axios": "^1.12.2",
    "bcryptjs": "^2.4.3",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.2",
    "cors": "^2.8.5",
    "dotenv": "^16.3.1",
    "express": "^4.18.2",
    "helmet": "^7.1.0",
    "http-status-codes": "^2.3.0",
    "joi": "^17.11.0",
    "jsonwebtoken": "^9.0.2",
    "morgan": "^1.10.0",
    "pg": "^8.11.3",
    "reflect-metadata": "^0.2.2",
    "typeorm": "^0.3.27",
    "uuid": "^9.0.1"
  },
  "devDependencies": {
    "@types/bcryptjs": "^2.4.6",
    "@types/cors": "^2.8.16",
    "@types/express": "^4.17.21",
    "@types/jest": "^29.5.8",
    "@types/jsonwebtoken": "^9.0.5",
    "@types/morgan": "^1.9.9",
    "@types/node": "^20.8.10",
    "@types/pg": "^8.10.7",
    "@types/uuid": "^9.0.7",
    "@typescript-eslint/eslint-plugin": "^6.10.0",
    "@typescript-eslint/parser": "^6.10.0",
    "eslint": "^8.53.0",
    "eslint-config-prettier": "^10.1.8",
    "eslint-plugin-prettier": "^5.5.4",
    "jest": "^29.7.0",
    "nodemon": "^3.0.1",
    "prettier": "^3.6.2",
    "ts-node": "^10.9.1",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.2.2"
  }
}
